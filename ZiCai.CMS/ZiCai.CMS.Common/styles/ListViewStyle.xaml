<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:clr="clr-namespace:System;assembly=mscorlib">

  <SolidColorBrush x:Key="LISTVIEW_BACKGROUND" Color="#FFFFFFFF"/>
  <SolidColorBrush x:Key="LISTVIEW_MOUSE_OVER_BACKGROUND" Color="#3000518D"/>
  <SolidColorBrush x:Key="PROGRAM_LISTVIEW_MOUSE_OVER_BACKGROUND" Color="#FFFFD69F"/>
  <SolidColorBrush x:Key="LISTVIEW_GROUPED_BACKGROUND" Color="#FF8BB7E9"/>
  <SolidColorBrush x:Key="LISTVIEW_GROUPED_MOUSE_OVER_BACKGROUND" Color="#FF5B96C1"/>
  
  <LinearGradientBrush x:Key="LISTVIEW_SELECTED_BACKGROUND" StartPoint="0.188915,-0.016922" EndPoint="0.188915,0.983078">
    <GradientStop Color="#FF50ADF3" Offset="0"/>
    <GradientStop Color="#FE303D7B" Offset="0.998901"/>
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="PROGRAM_LISTVIEW_SELECTED_BACKGROUND" StartPoint="0.188915,-0.016922" EndPoint="0.188915,0.983078">
     <GradientStop Color="#FFF3AA37" Offset="0"/>
     <GradientStop Color="#FEC55A07" Offset="1"/>
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="VARIANCE_CELL_BACKGROUND" StartPoint="0.519046,0.0192287" EndPoint="0.519046,1.00961">
    <GradientStop Color="#FFFF0000" Offset="0"/>
    <GradientStop Color="#FE8B0000" Offset="0.998901"/>
  </LinearGradientBrush>

  <SolidColorBrush x:Key="LISTVIEW_BORDER_BRUSH" Color="#FF621D00"/>
  <Thickness x:Key="LISTVIEW_BORDER_THICKNESS" Left="2" Top="2" Right="2" Bottom="2"/>

  <clr:Double x:Key="LISTVIEW_HEADER_HEIGHT">38</clr:Double>
  <clr:Double x:Key="LISTVIEW_HEADER_FONT_SIZE">15</clr:Double>
  <clr:Double x:Key="LISTVIEW_ITEM_FONT_SIZE">13.33</clr:Double>
  <clr:Double x:Key="LISTVIEW_ITEM_HEIGHT">24</clr:Double>
  <FontWeight x:Key="LISTVIEW_HEADER_FONT_WEIGHT">Bold</FontWeight>
  <SolidColorBrush x:Key="LISTVIEW_HEADER_BACKGROUND" Color="#FF834D38"/>
  <SolidColorBrush x:Key="LISTVIEW_HEADER_MOUSE_OVER_BACKGROUND" Color="#FF623220"/>
  <LinearGradientBrush x:Key="LISTVIEW_HEADER_PRESSED_BACKGROUND" StartPoint="0,0" EndPoint="0,1">
    <GradientStop Color="#FF62311F" Offset="0"/>
    <GradientStop Color="#FF93624D" Offset="1"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="LISTVIEW_HEADER_FOREGROUND">#FFFFFFFF</SolidColorBrush>

  <!-- List View Style Start -->
  <Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}" TargetType="{x:Type ScrollViewer}">
    <Setter Property="Focusable" Value="False"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollViewer}">
          <Grid SnapsToDevicePixels="True" Background="{TemplateBinding Background}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="*"/>
              <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <DockPanel Margin="0,-1,-1,0">
              <ScrollViewer Panel.ZIndex="10" Focusable="False" DockPanel.Dock="Top" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden">
                <Grid Background="{StaticResource LISTVIEW_HEADER_BACKGROUND}">
                  <GridViewHeaderRowPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Columns="{Binding Path=TemplatedParent.View.Columns, RelativeSource={RelativeSource TemplatedParent}}" AllowsColumnReorder="{Binding Path=TemplatedParent.View.AllowsColumnReorder, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderContainerStyle="{Binding Path=TemplatedParent.View.ColumnHeaderContainerStyle, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderContextMenu="{Binding Path=TemplatedParent.View.ColumnHeaderContextMenu, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderTemplate="{Binding Path=TemplatedParent.View.ColumnHeaderTemplate, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderTemplateSelector="{Binding Path=TemplatedParent.View.ColumnHeaderTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderToolTip="{Binding Path=TemplatedParent.View.ColumnHeaderToolTip, RelativeSource={RelativeSource TemplatedParent}}"  Margin="0"/>
                  <Border x:Name="HeaderExtraBorder" BorderBrush="{StaticResource LISTVIEW_BORDER_BRUSH}" BorderThickness="1,0,0,0"  Margin="0" />
                </Grid>
              </ScrollViewer>
              <!--Reset the margin value.-->
              <!--Special for the HoldStatusListView.-->
              <Grid Margin="0,-1,0,0" >
                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.DirectionalNavigation="Local" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" CanContentScroll="{TemplateBinding CanContentScroll}"/>
                <Border x:Name="ExtraBorder" HorizontalAlignment="Left" BorderBrush="{StaticResource LISTVIEW_BORDER_BRUSH}" BorderThickness="0,0,1,0"  Margin="0"/>
                <ItemsControl Focusable="False" IsHitTestVisible="False" ItemsSource="{Binding Path=TemplatedParent.View.Columns, RelativeSource={RelativeSource TemplatedParent}}"
                  Margin="0">
                  <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                      <VirtualizingStackPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                  </ItemsControl.ItemsPanel>
                  <ItemsControl.ItemTemplate>
                    <DataTemplate>
                      <Border Width="{Binding ActualWidth}" BorderBrush="{StaticResource LISTVIEW_BORDER_BRUSH}" BorderThickness="0,0,1,0" Margin="{Binding Path=Tag, RelativeSource={RelativeSource AncestorLevel=1, AncestorType={x:Type ListView}, Mode=FindAncestor}}" />
                    </DataTemplate>
                  </ItemsControl.ItemTemplate>
                </ItemsControl>
              </Grid>
            </DockPanel>
            <ScrollBar Cursor="Arrow" x:Name="PART_HorizontalScrollBar" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Grid.Row="1" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0.0" Value="{Binding Path=HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Orientation="Horizontal" ViewportSize="{TemplateBinding ViewportWidth}"/>
            <ScrollBar Cursor="Arrow" x:Name="PART_VerticalScrollBar" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0.0" Value="{Binding Path=VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Orientation="Vertical" ViewportSize="{TemplateBinding ViewportHeight}"/>
            <DockPanel LastChildFill="False" Background="{Binding Path=Background, ElementName=PART_VerticalScrollBar}" Grid.Column="1" Grid.Row="1">
              <Rectangle Fill="White" Width="1" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" DockPanel.Dock="Left"/>
              <Rectangle Fill="White" Height="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" DockPanel.Dock="Top"/>
            </DockPanel>
          </Grid>
          <ControlTemplate.Triggers>
            <!--<DataTrigger Binding="" Value="0,0,0,0">
              <Setter TargetName="ExtraBorder" Property="Visibility" Value="Collapsed"/>
              <Setter TargetName="HeaderExtraBorder" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>-->
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type ListView}">
    <Setter Property="Tag" Value="0" />
    <Setter Property="Background" Value="{StaticResource LISTVIEW_BACKGROUND}"/>
    <Setter Property="BorderBrush" Value="{StaticResource LISTVIEW_BORDER_BRUSH}"/>
    <Setter Property="BorderThickness" Value="{StaticResource LISTVIEW_BORDER_THICKNESS}"/>
    <Setter Property="Foreground" Value="{DynamicResource COMMON_DARK_FOREGROUND}"/>
    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="Focusable" Value="False"/>
    <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListView}">
          <Border x:Name="Bd" SnapsToDevicePixels="True" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <ScrollViewer x:Name="Scroller" Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}" Padding="{TemplateBinding Padding}">
              <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            </ScrollViewer>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsGrouping" Value="True">
              <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ListViewItemTextBlockStyle" BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="{x:Type TextBlock}">
    <Setter Property="TextTrimming" Value="CharacterEllipsis" />
    <Setter Property="TextWrapping" Value="NoWrap" />
    <Setter Property="VerticalAlignment" Value="Top" />
  </Style>

  <Style x:Key="ListViewItemTextBoxStyle" BasedOn="{StaticResource {x:Type TextBox}}" TargetType="{x:Type TextBox}">
    <Setter Property="TextWrapping" Value="NoWrap" />
    <Setter Property="VerticalAlignment" Value="Top" />
  </Style>

  <Style TargetType="{x:Type ListViewItem}">
    <Setter Property="FontSize" Value="{DynamicResource LISTVIEW_ITEM_FONT_SIZE}" />
    <Setter Property="FontFamily" Value="{DynamicResource COMMON_FONT_FAMILY}" />
    <Setter Property="BorderThickness" Value="0,0,0,1"/>
    <Setter Property="BorderBrush" Value="{StaticResource LISTVIEW_BORDER_BRUSH}"/>
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="Padding" Value="0,4,0,4"/>
    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="VerticalContentAlignment" Value="Stretch"/>
    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListViewItem}">
          <ControlTemplate.Resources>
            <Style TargetType="{x:Type ContentPresenter}">
              <Style.Resources>
                <Style BasedOn="{StaticResource ListViewItemTextBlockStyle}" TargetType="TextBlock" />
                <Style BasedOn="{StaticResource ListViewItemTextBoxStyle}" TargetType="TextBox" />
              </Style.Resources>
            </Style>
          </ControlTemplate.Resources>
          <Border x:Name="Bd" SnapsToDevicePixels="True" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
            <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
              <GridViewRowPresenter.Resources>
                <!--<Style TargetType="TextBlock">
                  <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                  <Setter Property="TextWrapping" Value="NoWrap" />
                </Style>
                <Style TargetType="TextBox">
                  <Setter Property="TextWrapping" Value="NoWrap" />
                </Style>-->
              </GridViewRowPresenter.Resources>
            </GridViewRowPresenter>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Background" Value="{StaticResource LISTVIEW_MOUSE_OVER_BACKGROUND}"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
              <Setter Property="Background" Value="{StaticResource LISTVIEW_SELECTED_BACKGROUND}"/>
              <Setter Property="Foreground" Value="{DynamicResource COMMON_WHITE_FOREGROUND}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="TempListViewItemStyle" TargetType="{x:Type ListViewItem}">
    <Setter Property="FontSize" Value="{DynamicResource LISTVIEW_ITEM_FONT_SIZE}" />
    <Setter Property="FontFamily" Value="{DynamicResource COMMON_FONT_FAMILY}" />
    <Setter Property="BorderThickness" Value="0,0,0,1"/>
    <Setter Property="BorderBrush" Value="{StaticResource LISTVIEW_BORDER_BRUSH}"/>
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="Padding" Value="0,4,0,4"/>
    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="VerticalContentAlignment" Value="Stretch"/>
    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListViewItem}">
          <Border x:Name="Bd" SnapsToDevicePixels="True" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
            <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Background" Value="{StaticResource LISTVIEW_MOUSE_OVER_BACKGROUND}"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
              <Setter Property="Background" Value="{StaticResource LISTVIEW_SELECTED_BACKGROUND}"/>
              <Setter Property="Foreground" Value="{DynamicResource COMMON_WHITE_FOREGROUND}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <!-- List View Style End -->

  <Style x:Key="GridViewColumnHeaderGripper" TargetType="{x:Type Thumb}">
    <Setter Property="Canvas.Right" Value="-9"/>
    <Setter Property="Width" Value="18"/>
    <Setter Property="Height" Value="{Binding Path=ActualHeight, RelativeSource={RelativeSource TemplatedParent}}"/>
    <Setter Property="Padding" Value="0,0,0,0"/>
    <Setter Property="Background" Value="{StaticResource LISTVIEW_BORDER_BRUSH}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border Background="Transparent" Padding="{TemplateBinding Padding}">
            <DockPanel HorizontalAlignment="Center">
              <Rectangle Fill="{TemplateBinding Background}" Width="1"/>
              <Rectangle Fill="Transparent" Width="1"/>
            </DockPanel>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="{x:Type GridViewColumnHeader}">
    <Setter Property="HorizontalContentAlignment" Value="Center"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="Padding" Value="2,0,2,0"/>
    <Setter Property="FontFamily" Value="{DynamicResource COMMON_FONT_FAMILY}"/>
    <Setter Property="FontSize" Value="{StaticResource LISTVIEW_HEADER_FONT_SIZE}"/>
    <Setter Property="FontWeight" Value="{StaticResource LISTVIEW_HEADER_FONT_WEIGHT}"/>
    <Setter Property="Height" Value="{StaticResource LISTVIEW_HEADER_HEIGHT}"/>
    <Setter Property="Foreground" Value="{StaticResource LISTVIEW_HEADER_FOREGROUND}"/>
    <Setter Property="Background" Value="{StaticResource LISTVIEW_HEADER_BACKGROUND}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
          <Grid SnapsToDevicePixels="True" Background="{TemplateBinding Background}">
            <Border x:Name="HighlightBorder" VerticalAlignment="Bottom" BorderThickness="0,0,0,1" BorderBrush="{StaticResource LISTVIEW_BORDER_BRUSH}"/>
            <Border Margin="1,0,1,0" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
            </Border>
            <Canvas>
              <Thumb x:Name="PART_HeaderGripper" Style="{StaticResource GridViewColumnHeaderGripper}"/>
            </Canvas>
            <Border x:Name="HeaderPressBorder" BorderThickness="1"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Background" Value="{StaticResource LISTVIEW_HEADER_MOUSE_OVER_BACKGROUND}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Margin" TargetName="HeaderPressBorder" Value="1,0,0,0"/>
              <Setter Property="Background" Value="{StaticResource LISTVIEW_HEADER_PRESSED_BACKGROUND}"/>
            </Trigger>
            <Trigger Property="Height" Value="Auto">
              <Setter Property="MinHeight" Value="20"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
            <!--<DataTrigger Binding="" Value="Ascending">
            </DataTrigger>-->
            <!--<DataTrigger Binding="" Value="Descending">
            </DataTrigger>-->
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="Role" Value="Floating">
        <Setter Property="Opacity" Value="0.7"/>
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
              <Canvas x:Name="PART_FloatingHeaderCanvas"/>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
      <Trigger Property="Role" Value="Padding">
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
              <Grid SnapsToDevicePixels="True" Background="{TemplateBinding Background}">
                <Border VerticalAlignment="Bottom" Height="3" BorderThickness="0,0,0,1"/>
                <Border Margin="1,0,1,0" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}"/>
              </Grid>
              <ControlTemplate.Triggers>
                <Trigger Property="Height" Value="Auto">
                  <Setter Property="MinHeight" Value="20"/>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="NoLineListViewItemStyle" BasedOn="{StaticResource {x:Type ListViewItem}}" TargetType="{x:Type ListViewItem}">
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="BorderThickness" Value="0,0,0,0"/>
    <Setter Property="Padding" Value="0" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListViewItem}">
          <ControlTemplate.Resources>
            <Style TargetType="{x:Type ContentPresenter}">
              <Style.Resources>
                <Style BasedOn="{StaticResource ListViewItemTextBlockStyle}" TargetType="TextBlock" />
                <Style BasedOn="{StaticResource ListViewItemTextBoxStyle}" TargetType="TextBox" />
              </Style.Resources>
            </Style>
          </ControlTemplate.Resources>
          <Border x:Name="Bd" SnapsToDevicePixels="True" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
            <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="NullBackgroudnHeaderListViewStyle" BasedOn="{StaticResource {x:Type ListView}}" TargetType="{x:Type ListView}">
    <Style.Resources>
      <Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}" TargetType="{x:Type ScrollViewer}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ScrollViewer}">
              <Grid SnapsToDevicePixels="True" Background="{TemplateBinding Background}">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*"/>
                  <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                  <RowDefinition Height="*"/>
                  <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <DockPanel Margin="0,-1,-1,0">
                  <ScrollViewer Panel.ZIndex="10" Focusable="False" DockPanel.Dock="Top" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden">
                    <Grid>
                      <GridViewHeaderRowPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Columns="{Binding Path=TemplatedParent.View.Columns, RelativeSource={RelativeSource TemplatedParent}}" AllowsColumnReorder="{Binding Path=TemplatedParent.View.AllowsColumnReorder, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderContainerStyle="{Binding Path=TemplatedParent.View.ColumnHeaderContainerStyle, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderContextMenu="{Binding Path=TemplatedParent.View.ColumnHeaderContextMenu, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderTemplate="{Binding Path=TemplatedParent.View.ColumnHeaderTemplate, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderTemplateSelector="{Binding Path=TemplatedParent.View.ColumnHeaderTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderToolTip="{Binding Path=TemplatedParent.View.ColumnHeaderToolTip, RelativeSource={RelativeSource TemplatedParent}}"  Margin="0"/>
                      <Border x:Name="HeaderExtraBorder" BorderBrush="{StaticResource LISTVIEW_BORDER_BRUSH}" BorderThickness="1,0,0,0"  Margin="0" />
                    </Grid>
                  </ScrollViewer>
                  <!--Reset the margin value.-->
                  <!--Special for the HoldStatusListView.-->
                  <Grid Margin="0,-1,0,0" >
                    <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.DirectionalNavigation="Local" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" CanContentScroll="{TemplateBinding CanContentScroll}"/>
                    <Border x:Name="ExtraBorder" HorizontalAlignment="Left" BorderBrush="{StaticResource LISTVIEW_BORDER_BRUSH}" BorderThickness="0,0,1,0"  Margin="0"/>
                    <ItemsControl Focusable="False" IsHitTestVisible="False" ItemsSource="{Binding Path=TemplatedParent.View.Columns, RelativeSource={RelativeSource TemplatedParent}}"
                  Margin="0">
                      <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                          <VirtualizingStackPanel Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                      </ItemsControl.ItemsPanel>
                      <ItemsControl.ItemTemplate>
                        <DataTemplate>
                          <Border Width="{Binding ActualWidth}" BorderBrush="{StaticResource LISTVIEW_BORDER_BRUSH}" BorderThickness="0,0,1,0" Margin="{Binding Path=Tag, RelativeSource={RelativeSource AncestorLevel=1, AncestorType={x:Type ListView}, Mode=FindAncestor}}" />
                        </DataTemplate>
                      </ItemsControl.ItemTemplate>
                    </ItemsControl>
                  </Grid>
                </DockPanel>
                <ScrollBar Cursor="Arrow" x:Name="PART_HorizontalScrollBar" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Grid.Row="1" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0.0" Value="{Binding Path=HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Orientation="Horizontal" ViewportSize="{TemplateBinding ViewportWidth}"/>
                <ScrollBar Cursor="Arrow" x:Name="PART_VerticalScrollBar" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0.0" Value="{Binding Path=VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Orientation="Vertical" ViewportSize="{TemplateBinding ViewportHeight}"/>
                <DockPanel LastChildFill="False" Background="{Binding Path=Background, ElementName=PART_VerticalScrollBar}" Grid.Column="1" Grid.Row="1">
                  <Rectangle Fill="White" Width="1" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" DockPanel.Dock="Left"/>
                  <Rectangle Fill="White" Height="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" DockPanel.Dock="Top"/>
                </DockPanel>
              </Grid>
              <!--<ControlTemplate.Triggers>
                <DataTrigger Binding="0" Value="0,0,0,0">
                  <Setter TargetName="ExtraBorder" Property="Visibility" Value="Collapsed"/>
                  <Setter TargetName="HeaderExtraBorder" Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
              </ControlTemplate.Triggers>-->
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <Style TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="2,0,2,0"/>
        <Setter Property="FontFamily" Value="{DynamicResource COMMON_FONT_FAMILY}"/>
        <Setter Property="FontSize" Value="{StaticResource LISTVIEW_HEADER_FONT_SIZE}"/>
        <Setter Property="Height" Value="26"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
              <Grid SnapsToDevicePixels="True" Background="{TemplateBinding Background}">
                <Canvas>
                  <Thumb x:Name="PART_HeaderGripper" Style="{StaticResource GridViewColumnHeaderGripper}"/>
                </Canvas>
                <ContentPresenter x:Name="HeaderContent" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" >
                  <ContentPresenter.Style>
                    <Style TargetType="{x:Type ContentPresenter}">
                      <Style.Resources>
                        <Style TargetType="{x:Type TextBlock}">
                          <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                        </Style>
                      </Style.Resources>
                    </Style>
                  </ContentPresenter.Style>
                </ContentPresenter>
              </Grid>
              <ControlTemplate.Triggers>
                <Trigger Property="Height" Value="Auto">
                  <Setter Property="MinHeight" Value="20"/>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
        <Style.Triggers>
          <Trigger Property="Role" Value="Floating">
            <Setter Property="Opacity" Value="0.7"/>
            <Setter Property="Template">
              <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                  <Canvas x:Name="PART_FloatingHeaderCanvas"/>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Trigger>
          <Trigger Property="Role" Value="Padding">
            <Setter Property="Template">
              <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                  <Grid SnapsToDevicePixels="True" Background="{TemplateBinding Background}">
                    <Border VerticalAlignment="Bottom" Height="3" BorderThickness="0,0,0,1"/>
                    <Border Margin="1,0,1,0" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}"/>
                  </Grid>
                  <ControlTemplate.Triggers>
                    <Trigger Property="Height" Value="Auto">
                      <Setter Property="MinHeight" Value="20"/>
                    </Trigger>
                  </ControlTemplate.Triggers>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Trigger>
        </Style.Triggers>
      </Style>
    </Style.Resources>
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="ItemContainerStyle" Value="{StaticResource NoLineListViewItemStyle}" />
  </Style>

</ResourceDictionary>